@namespace(uri="diagrama_concreta", prefix="diagrama_concreta")
@gmf
package diagrama_concreta;

@gmf.diagram
class TCDDiagramaClases {
    val TCDClase[*] listaClases;
    val TCDRelacion[*] listaRelaciones;
    val TCDPaquete[*] listaPaquetes;
    
    attr String nombre;
}

class ModelFactory {
	attr String nombre;
	attr String ruta;
	val TCDDiagramaClases[*] listaDiagramas;
}

@gmf.node(label = "nombre", color = "255,252,142")
class TCDPaquete {
	val TCDPaquete[*] listaPaquetes;
	val TCDClase[*] listaClases;
	
	attr String nombre;
	attr String ruta;
}

@gmf.node(label = "nombre", color = "227,255,248")
class TCDClase {
    @gmf.compartment
    val TCDAtributo[*] listaAtributos;
    @gmf.compartment
    val TCDMetodo[*] listaMetodos;
    
   
    attr String nombre;
    attr String estereotipo;
    attr Visibilidad modificadorAcceso;
    attr boolean isAbstract;
    attr String documentacion;
}

@gmf.link
abstract class TCDRelacion {
    ref TCDClase source;
    ref TCDClase target;
}

enum Navegavilidad {
	bidireccional;
	unidireccional;
}

@gmf.link(source="source", target="target", style="solid", width="3", color = "39,174,96", source.decoration = "rhomb")
class TCDAgregacion extends TCDRelacion{
	
	attr String nombreOrigen;
    attr String nombreDestino;
    attr Multiplicidad multiplicidadOrigen;
    attr Multiplicidad multiplicidadDestino;
}

@gmf.link(source="source", target="target", style="solid", width="3", color = "0,62,255")
class TCDAsociacion extends TCDRelacion{
	
	attr String nombreOrigen;
    attr String nombreDestino;
    attr Multiplicidad multiplicidadOrigen;
    attr Multiplicidad multiplicidadDestino;
    attr Navegavilidad navegavilidad;
}

@gmf.link(source="source", target="target", style="dash", width="3", color = "0,255,193", source.decoration = "rhomb")
class TCDComposicion extends TCDRelacion{
	
	attr String nombreOrigen;
    attr String nombreDestino;
    attr Multiplicidad multiplicidadOrigen;
    attr Multiplicidad multiplicidadDestino;
}

@gmf.link(source="source", target="target", style="solid", width="3", color = "255,15,15", source.decoration = "filledrhomb")
class TCDDependencia extends TCDRelacion{
	
	attr String nombreOrigen;
    attr String nombreDestino;
    attr Multiplicidad multiplicidadOrigen;
    attr Multiplicidad multiplicidadDestino;
}

@gmf.link(source="source", target="target", style="solid", width="3", color = "4,255,0", source.decoration = "closedarrow")
class TCDHerencia extends TCDRelacion{
	
}

enum Multiplicidad {
	uno;
	uno_cero;
	cero_varios;
	uno_varios;
}

@gmf.node(label = "nombre", color = "166,255,234")
class TCDAtributo {
	attr String nombre;
	attr TipoDato tipoDato;
	attr Visibilidad visibilidad;
	attr boolean isConstante;
	attr boolean isStatic;
}

enum TipoDato {
	string;
	number;
	boolean;
	undefined;
	null;
}

enum Visibilidad {
	public;
	private;
	protected;
}

@gmf.node(label = "nombre", border.style = "dot", color = "166,255,234")
class TCDMetodo {
	
	@gmf.comparment
    val TCDParametro[*] listaParametros;
	
	attr String nombre;
	attr Visibilidad modificadorAcceso;
	attr TipoRetorno tipoRetorno;
	attr String semantica;
}

enum TipoRetorno {
	string;
	number;
	boolean;
	undefined;
}

@gmf.node(label = "nombre")
class TCDParametro {
	attr String nombre;
	attr TipoDato tipoDato;
}